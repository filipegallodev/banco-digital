generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @unique @default(uuid())
  username    String  @unique
  password    String
  firstName   String
  lastName    String
  birth       String?
  phoneNumber String?
  city        String?
  state       String?
  income      String?
  job         String?
  account     Account @relation(fields: [accountId], references: [id])
  accountId   String  @unique
}

model Account {
  id                   String        @id @unique @default(uuid())
  balance              Decimal
  users                User?
  receivedTransactions Transaction[] @relation("destinationAccount")
  sentTransactions     Transaction[] @relation("originAccount")
  loans                Loan[]        @relation("requester")
  cards                Card[]        @relation("account")
}

model Transaction {
  id                   String   @id @unique @default(uuid())
  value                Decimal
  createdAt            DateTime @default(now())
  destinationAccount   Account  @relation("destinationAccount", fields: [destinationAccountId], references: [id])
  destinationAccountId String
  originAccount        Account  @relation("originAccount", fields: [originAccountId], references: [id])
  originAccountId      String
}

model Loan {
  id                String   @id @unique @default(uuid())
  value             Decimal
  debt              Decimal
  requestedAt       DateTime @default(now())
  installmentAmount Int
  installmentDueDay Int
  installmentValue  Decimal
  requester         Account  @relation("requester", fields: [requesterId], references: [id])
  requesterId       String
}

model Card {
  id             String   @id @unique @default(uuid())
  type           String
  number         String
  validity       DateTime
  invoiceClosing String
  requestedAt    DateTime @default(now())
  account        Account  @relation("account", fields: [accountId], references: [id])
  accountId      String
}
